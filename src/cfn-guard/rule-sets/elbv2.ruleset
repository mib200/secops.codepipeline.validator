# ---------------- VARIABLES ----------------
let false_string_list = [false, False]
let true_string_list = [true, True]
# ---------------- RULES ----------------
# Check if the Application Load Balancer and the Classic Load Balancer have logging enabled.
AWS::ElasticLoadBalancingV2::LoadBalancer WHEN LoadBalancerAttributes.*.Key == access_logs.s3.enabled CHECK LoadBalancerAttributes.*.Value NOT_IN %false_string_list
AWS::ElasticLoadBalancingV2::LoadBalancer WHEN LoadBalancerAttributes.*.Key == access_logs.s3.bucket CHECK LoadBalancerAttributes.*.Value == /.*/
# ---
# Application Load Balancer must be configured to drop invalid header
AWS::ElasticLoadBalancingV2::LoadBalancer WHEN LoadBalancerAttributes.*.Key == routing.http.drop_invalid_header_fields.enabled CHECK LoadBalancerAttributes.*.Value NOT_IN %false_string_list
# ---
# Check if Elastic Load Balancing has deletion protection enabled
AWS::ElasticLoadBalancingV2::LoadBalancer WHEN LoadBalancerAttributes.*.Key == deletion_protection.enabled CHECK LoadBalancerAttributes.*.Value NOT_IN %false_string_list
# ---
# Checks whether HTTP to HTTPS redirection is configured on all HTTP listeners of Application Load Balancer.
AWS::ElasticLoadBalancingV2::Listener WHEN Protocol == HTTP CHECK DefaultActions.*.RedirectConfig.Protocol == HTTPS
# ---
